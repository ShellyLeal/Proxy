import java.io.*;
import java.net.*;
import java.util.StringTokenizer;

interface mySockets { // métodos a serem implementados pelo proxy
	String readLine();

	void writeLine(String myString);

	void dispose();
}

public class Proxy { 
	private Socket mySocket;
	private ServerSocket myServer;
	private BufferedReader myIn;
	private PrintStream myOut;

	public Proxy(String myHost, int myPort, boolean myWait) { // endereço IP do host, a porta, e um flag para aguardar a conexão
		
		
		try {
			if (myWait) { // aguarda a conexão 
				System.out.println("Iniciando servidor");
				myServer = new ServerSocket(myPort);
				System.out.println("Aguardando conexão...");
				mySocket = myServer.accept();
				System.out.println("Conexão estabelecida.");
			} 
			else
				mySocket = new Socket(myHost, myPort);
				
           
			myIn = new BufferedReader(new InputStreamReader(mySocket.getInputStream()));
			myOut = new PrintStream(mySocket.getOutputStream()); // encaminha a informação
		
				try {
				String mensagem = myIn.readLine();
				System.out.println("Mensagem recebida do cliente ["
				+mySocket.getInetAddress().getHostName()+"]: "+
				mensagem);
				StringTokenizer t = new StringTokenizer(mensagem);
				String token = t.nextToken();
				int c;
				String resource = null;
				if(token.equals("GET"))
					resource = t.nextToken();
				FileInputStream f = new FileInputStream(resource);
				while((c = f.read()) != -1)
					myOut.write(c);
				f.close();
				}
				catch (IOException e) {
					e.printStackTrace();
				}
			
				System.out.println("Encerrando conexão.");
				myIn.close();
				myOut.close();
			
				mySocket.close();
				
				System.out.println("Encerrando servidor");
				myServer.close();
			
				
           
		} catch (IOException e) { 
			e.printStackTrace();
		}
	}



	public static void main(String[] args){

			Proxy p = new Proxy("localhost",2525,true);
			
		
	}
	
}
